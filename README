Arithmetic Coding and PPM compression

Authors:
Pekka J Mikkola (Arithmetic coding)
Janne J Kataja (PPM compression)

Contact:
firstname.lastname @Â cs.helsinki.fi


Configure:

$ $VISUAL common.pri

	Edit the -march=___ , -msse4.2 and -mcrc32 gcc options to match
	your target hardware (options in 'gcc --help=target').

	Setting -DBUILTIN_CRC enables the use of CRC32c hardware intrisics.
	The instruction is added in SSE4.2 (available in i5/i7 or later).
	Otherwise, software hashing will be used. This has a major
	effect on compression performance.


Build:

	Minimum of gcc 4.4 is required to build.

$ qmake
$ make


Usage:

$ bin/pompom -h

Usage: pompom [OPTION]...
Compress or decompress input using fixed-order PPM compression.
Reads from standard input and writes to standard output.

Options:
  -c [ --stdout ]         compress to stdout (default)
  -d [ --decompress ]     decompress to stdout
  -h [ --help ]           show this help
  -o [ --order ] arg (=3) compress: model order (range 1-6, default 3)
  -m [ --mem ] arg (=32)  compress: memory use MiB (range 8-2048, default 32)


Benchmarking:

	Drop text corpus in ex. calgary/ , largetext/  and pizzachili/ . 
	Testing script takes a directory containing the test data
	as an argument, calls different compression programs
	with different sets of arguments and outputs a comma-separated
	table of the results, with compression+uncompression time and
	compressed file size.

$ cd data/
$ ./runtest.pl calgary/
